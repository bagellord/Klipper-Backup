[include mainsail.cfg]
# This file contains common pin mappings for the BIGTREETECH SKR Pico V1.0
# To use this config, the firmware should be compiled for the RP2040 with
# USB communication.

# The "make flash" command does not work on the SKR Pico V1.0. Instead,
# after running "make", copy the generated "out/klipper.uf2" file
# to the mass storage device in RP2040 boot mode

## Voron Design VORON 0.2 SKR Pico V1.0 config

## *** THINGS TO CHANGE/CHECK: ***
## MCU path                                                                     [mcu] section
## Z and Extruder motor currents                                                [tmc2209 stepper_*] sections. Uncomment the stepper motor you have
## Full steps per rotation for Extruder                                         [extruder] section
## Thermistor types                                                             [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Motor currents                                                               [extruder] [stepper] and [_HOME_X/Y] macro sections
## PID tune                                                                     [extruder] and [heater_bed] sections
## Fine tune E steps                                                            [extruder] section
## For more info                                                                check https://docs.vorondesign.com/build/startup/#v0

[include fans.cfg]
[include filament.cfg]
[include lights_main.cfg]
[include macros_main.cfg]
[include KAMP_Settings.cfg]
[include TEST_SPEED.cfg]

[mcu]
#####################################################################
# Obtain definition by "ls -l /dev/serial/by-id/"
#####################################################################
#serial: /dev/serial/by-id/usb-Klipper_rp2040_45474150538D550A-if00
serial: /dev/serial/by-id/usb-Klipper_rp2040_454741505B856A3A-if00
## serial: /dev/ttyAMA0 											# for UART connection
restart_method: command

[mcu host]
serial: /tmp/klipper_host_mcu

#[mcu pico]
#serial: /dev/serial/by-id/usb-Klipper_rp2040_0881842304241950-if00

#[adxl345]
#spi_bus: spi0a
#cs_pin: pico:gpio1

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#  60, 60, 20

#####################################################################
#   V0 Display
#####################################################################
[mcu display]
serial: /dev/serial/by-id/usb-Klipper_stm32f042x6_038018000743564E32313720-if00
restart_method: command

#####################################################################
#   Klipper Expander
#####################################################################
[mcu expander]
serial: /dev/serial/by-id/usb-Klipper_stm32f042x6_1A0010000543304846333520-if00
restart_method: command

[exclude_object]

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[temperature_sensor btt_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[printer]
kinematics: corexy
max_velocity: 500
max_accel: 20000
max_z_velocity: 15
max_z_accel: 300
square_corner_velocity: 6.0

[input_shaper]
#shaper_freq_x: 102.8
#shaper_type_x: ei
#shaper_freq_y: 96.4
#shaper_type_y: mzv

#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_x]
step_pin: gpio11
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: gpio10                                                     # Check motor direction in link above. If inverted, add a ! before gpio10
enable_pin: !gpio12
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: 120
position_max: 120
homing_speed: 20                                                    # for sensorless homing it is recommended not to go above 40mm/s   
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 0
interpolate: False
# you need to calculate the run_current value using the equation (rated_motor_current * 0.707 = Maximum_run_current) start with a value that is about 60%-70% of your maximum value.
# rated_motor_current * 0.707 * 65% = 1.5A * .707 * .65 = 0.69
run_current: 0.69           
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
diag_pin: ^gpio4    												# YOU NEED TO JUMP THIS DIAG PIN ON YOUR BOARD FOR SENSORLESS HOMING TO WORK 
driver_SGTHRS: 50  												# this is set to 255 which is the MAX sensitivity for sensorless homing, you will need to tune this later

[stepper_y]
step_pin: gpio6
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: gpio5                                                      # Check motor direction in link above. If inverted, add a ! before gpio5
enable_pin: !gpio7
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_endstop: 120
position_max: 120
homing_speed: 20                                                    # for sensorless homing it is recommended not to go above 40mm/s   
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 2
interpolate: False
# you need to calculate the run_current value using the equation (rated_motor_current * 0.707 = Maximum_run_current) start with a value that is about 60%-70% of your maximum value.
# rated_motor_current * 0.707 * 65% = 1.5A * .707 * .65 = 0.69
run_current: 0.69
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
diag_pin: ^gpio3    												# YOU NEED TO JUMP THIS DIAG PIN ON YOUR BOARD FOR SENSORLESS HOMING TO WORK 
driver_SGTHRS: 53  												# this is set to 255 which is the MAX sensitivity for sensorless homing, you will need to tune this later

#####################################################################
#   Z Stepper Settings
#####################################################################

[stepper_z]
step_pin: gpio19
dir_pin: !gpio28                                                    # Remove the ! before gpio28 if motor direction is inverted.
enable_pin: !gpio2
rotation_distance: 8                                                # For T8x8 integrated lead screw
microsteps: 32
endstop_pin: ^gpio25
#position_endstop: 120
position_max: 121
position_min: -1.5
homing_speed: 20
second_homing_speed: 3.0
homing_retract_dist: 3.0


[tmc2209 stepper_z]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 1
interpolate: False
## Formbot Moons 
# rated_motor_current * 0.707 * .65 = 0.65 * 0.707 * 0.65 = 0.30
run_current: 0.30
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle

#####################################################################
#   Extruder
#####################################################################

[extruder]
step_pin: gpio14
dir_pin: gpio13                                                     # Add ! if moving opposite direction
enable_pin: !gpio15
#full_steps_per_rotation: 200                                       # Set to 200 for LDO 1.8° stepper motor, and set to 400 for OMC(StepperOnline) 0.9° stepper motor
rotation_distance: 22.23                                            # See calibrating rotation_distance on extruders doc
gear_ratio: 50:10                                                   # For Mini Afterburner
microsteps: 32
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: gpio23
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: Generic 3950                            
sensor_pin: gpio27
#control: pid                                                        # Do PID calibration after initial checks
#pid_Kp: 28.182
#pid_Ki: 1.978
#pid_Kd: 100.397
min_temp: 0
max_temp: 300
min_extrude_temp: 170
max_extrude_only_distance: 150
pressure_advance: 0.015                                               # See tuning pressure advance doc
pressure_advance_smooth_time: 0.040
max_extrude_cross_section: 5

[firmware_retraction]
retract_length: 1.5
retract_speed: 35
unretract_extra_length: 0
unretract_speed: 25

[tmc2209 extruder]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 3
interpolate: False
## For Formbot Moons
# rated_motor_current * 0.707 * .65 = 1 * 0.707 * 0.65 = 0.46
run_current: 0.46
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 0 for spreadcycle, avoid using stealthchop on extruder

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
heater_pin: gpio21
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: gpio26
smooth_time: 3.0
#max_power: 0.6                                                     # Only needed for 100w pads
min_temp: 0
max_temp: 120
#control: pid                                                        # Do PID calibration after initial checks
#pid_kp: 68.453
#pid_ki: 2.749
#pid_kd: 426.122

#####################################################################
#   Chamber Temp
#####################################################################
[temperature_sensor chamber]
sensor_type: Generic 3950
sensor_pin: expander:PA6
min_temp: 0
max_temp: 100
gcode_id: C

#[temperature_fan raspberry_pi]
#pin: host:gpio211
#kick_start_time: 0.8
#shutdown_speed: 0
#off_below: 0.1
#max_power: 1.0
#fan_speed: 0.6
#sensor_type: temperature_host
#control: pid
#min_temp: 0
#max_temp: 85
#max_delta: 5.0
#pid_kp: 1.0
#pid_ki: 0.5
#pid_kd: 2.0
#min_speed: 0.1
#max_speed: 1.0
#target_temp: 38

#####################################################################
# Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[homing_override]
axes: xyz
set_position_z: 0
gcode:
    {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}
    SAVE_GCODE_STATE NAME=STATE_HOME_OVERRIDE

    # Home Z first, to avoid any situation where the nozzle might scrape the bed
    {% if home_all or 'Z' in params %}
        _HOME_Z
    {% endif %}

    {% if home_all or 'X' in params %}
        _HOME_X
    {% endif %}

    {% if home_all or 'Y' in params %}
        _HOME_Y
    {% endif %}
    
    # G90
    # G0 X60 Y60 Z20 F3600 # move to bed center
    RESTORE_GCODE_STATE NAME=STATE_HOME_OVERRIDE

#[safe_z_home]
##home_xy_position: 120,120 										# these coordinates must NOT be greater than the values specified in "position_max:" for the X and Y steppers
#speed: 50.0
#z_hop: 5

## To be used with BED_SCREWS_ADJUST
[bed_screws]
screw1: 60,5
screw1_name: front screw
screw1_fine_adjust: 60,105
screw2: 5,115
screw2_name: back left
screw2_fine_adjust: 105,15
screw3: 115,115
screw3_name: back right
screw3_fine_adjust: 15,15

#####################################################################
# Neopixel
#####################################################################

#[neopixel board_rgb]
#pin: gpio24
#chain_count: 1
#color_order: GRB
#initial_RED: 0.0
#initial_GREEN: 0.1
#initial_BLUE: 0.0

[display]
lcd_type: sh1106
i2c_mcu: display
i2c_bus: i2c1a
# Set the direction of the encoder wheel
#   Standard: Right (clockwise) scrolls down or increases values. Left (counter-clockwise scrolls up or decreases values.
encoder_pins: ^display:PA3, ^display:PA4
#   Reversed: Right (clockwise) scrolls up or decreases values. Left (counter-clockwise scrolls down or increases values.
#encoder_pins: ^display:PA4, ^display:PA3
click_pin: ^!display:PA1
kill_pin: ^!display:PA5
#x_offset: 2
#   Use X offset to shift the display towards the right. Value can be 0 to 3
#vcomh: 0
#   Set the Vcomh value on SSD1306/SH1106 displays. This value is
#   associated with a "smearing" effect on some OLED displays. The
#   value may range from 0 to 63. Default is 0.
#   Adjust this value if you get some vertical stripes on your display. (31 seems to be a good value)

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [stepper_z]
#*# position_endstop = 119.915
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 62.362
#*# pid_ki = 2.887
#*# pid_kd = 336.753
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 29.025
#*# pid_ki = 3.395
#*# pid_kd = 62.042
#*#
#*# [input_shaper]
#*# shaper_type_x = ei
#*# shaper_freq_x = 105.0
#*# shaper_type_y = mzv
#*# shaper_freq_y = 97.0
